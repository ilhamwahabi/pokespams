{"version":3,"sources":["components/Header/index.js","components/Content/Methode/PatternInput/index.js","components/Content/Methode/PatternList/index.js","components/Content/Methode/index.js","components/Content/Result/index.js","components/Content/index.js","components/Footer/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","getResponse","id","title","iconElementLeft","iconElementRight","onClick","method","patterns","JSON","parse","localStorage","getItem","axios","get","then","res","console","log","data","catch","e","label","PatternInput","state","inputValue","handleChange","event","value","setState","handleSubmit","preventDefault","trim","props","onAdd","onSubmit","this","className","hintText","fullWidth","onChange","primary","React","Component","PatternList","text","onDelete","handleDelete","List","duration","easing","map","t","i","leftAvatar","icon","backgroundColor","blue500","rightIcon","primaryText","key","bind","Methode","filteredText","addItem","newText","newWord","prevState","concat","textArr","el","setItem","stringify","join","deleteItem","filter","changeMethod","Tabs","Result","responseData","inset","r","secondaryText","Content","Footer","App","response","handleResponse","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.01ae83df.chunk.js","sourcesContent":["import React from 'react';\r\nimport AppBar from 'material-ui/AppBar';\r\nimport FlatButton from 'material-ui/FlatButton';\r\nimport IconButton from 'material-ui/IconButton';\r\nimport Search from 'material-ui/svg-icons/action/search';\r\nimport axios from 'axios';\r\n\r\nconst Header = ({ getResponse }) => {\r\n   const onPoke = () => {\r\n    const patterns = \r\n      JSON.parse(localStorage.getItem(\"text\")) ? \r\n      JSON.parse(localStorage.getItem(\"text\")) : \"none\";\r\n\r\n    var method;\r\n    if (localStorage.getItem('method') === \"0\") {\r\n      method = \"kmp\"\r\n    } else if (localStorage.getItem('method') === \"1\") {\r\n      method = \"bym\"\r\n    } else if (localStorage.getItem('method') === \"2\") {\r\n      method = \"regex\"\r\n    }\r\n\r\n    axios.get(`http://localhost:51503/api/search?method=${method}&patterns=${patterns}`, {})\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        getResponse(res.data)\r\n      })\r\n      .catch(e => {\r\n        getResponse([[\"Sorry, server not deployed yet :(\", \"-\", \"-\"]])\r\n      })\r\n  }\r\n\r\n  return (\r\n    <header id=\"header\">\r\n      <AppBar\r\n        title=\"PokeSpams\"\r\n        iconElementLeft={<IconButton><Search /></IconButton>}\r\n        iconElementRight={<FlatButton onClick={onPoke} label=\"Poke\" />}\r\n      />\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","import React from \"react\";\r\nimport TextField from \"material-ui/TextField\";\r\nimport RaisedButton from \"material-ui/RaisedButton\";\r\n\r\nimport \"./index.css\";\r\n\r\nexport default class PatternInput extends React.Component {\r\n  state = { inputValue: \"\" };\r\n\r\n  handleChange = (event, value) => {\r\n    this.setState({ inputValue: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.inputValue.trim() !== \"\") {\r\n      this.props.onAdd(this.state.inputValue);\r\n      this.setState({ inputValue: \"\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section id=\"pattern\">\r\n        <form onSubmit={this.handleSubmit} className=\"pattern__form-control\">\r\n          <div className=\"pattern__form-text-input\">\r\n            <TextField\r\n              hintText=\"Add new spam word\"\r\n              fullWidth={true}\r\n              onChange={this.handleChange}\r\n              value={this.state.inputValue}\r\n            />\r\n          </div>\r\n          <div className=\"pattern__form-button\">\r\n            <RaisedButton\r\n              label=\"ADD\"\r\n              primary={true}\r\n              fullWidth={true}\r\n              onClick={this.handleSubmit}\r\n            />\r\n          </div>\r\n        </form>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { List, ListItem } from 'material-ui/List';\r\nimport Avatar from 'material-ui/Avatar';\r\nimport ActionAssignment from 'material-ui/svg-icons/action/assignment';\r\nimport { blue500 } from 'material-ui/styles/colors';\r\nimport FontIcon from 'material-ui/FontIcon';\r\nimport FlipMove from 'react-flip-move';\r\n\r\nimport './index.css'\r\n\r\nconst PatternList = ({ text, onDelete }) => {\r\n  const handleDelete = (id) => onDelete(id)\r\n\r\n  return (\r\n    <section id=\"filter\">\r\n      <List>\r\n        <FlipMove duration={500} easing=\"ease-out\">\r\n      {\r\n        !text[0] ? \r\n          <ListItem\r\n            primaryText=\"Kata identifikasi spam kosong\"\r\n            key={0}\r\n          /> :\r\n        text.map((t, i) => {\r\n          return (\r\n            <ListItem\r\n              leftAvatar={<Avatar icon={<ActionAssignment />} backgroundColor={blue500} />}\r\n              rightIcon={<FontIcon className=\"material-icons\">delete</FontIcon>}\r\n              primaryText={t.text}\r\n              key={t.id}\r\n              onClick={handleDelete.bind(null, t.id)}\r\n            />\r\n          )\r\n        })\r\n      }\r\n        </FlipMove>\r\n      </List>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default PatternList","import React from 'react'\r\nimport {Tabs, Tab} from 'material-ui/Tabs';\r\nimport FontIcon from 'material-ui/FontIcon';\r\n\r\nimport PatternInput from \"./PatternInput\"\r\nimport PatternList from \"./PatternList\"\r\n\r\nexport default class Methode extends React.Component {\r\n  state = {\r\n    filteredText: [\r\n      { id: 3, text: \"Dijual barang ini\" },\r\n      { id: 2, text: \"Dibutuhkan tenaga kerja\"},\r\n      { id: 1, text: \"Tidak perlu test\"}\r\n    ]\r\n  }\r\n\r\n  componentDidMount() {\r\n    const textArr = this.state.filteredText.map((el) => el.text)\r\n    localStorage.setItem(\"method\", 0);    \r\n    localStorage.setItem(\"text\", JSON.stringify(textArr.join(',')));    \r\n  }\r\n\r\n  addItem = (newText) => {\r\n    var newId; \r\n    if (this.state.filteredText[0]){\r\n      newId = this.state.filteredText[0].id + 1\r\n    } else {\r\n      newId = 1;\r\n    }\r\n    var newWord = {id: newId, text: newText}\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        filteredText: [].concat(newWord, prevState.filteredText)\r\n      }\r\n    })\r\n\r\n    const textArr = this.state.filteredText.map((el) => el.text)\r\n    localStorage.setItem(\"text\", JSON.stringify(textArr.join(',')));    \r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(prevState => {\r\n      return {\r\n        filteredText: prevState.filteredText.filter((el) => el.id !== id)\r\n      }\r\n    })\r\n\r\n    const textArr = this.state.filteredText.map((el) => el.text)\r\n    localStorage.setItem(\"text\", JSON.stringify(textArr.join(',')));    \r\n  }\r\n\r\n  changeMethod = (value) => {\r\n    localStorage.setItem(\"method\", value);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <section id=\"methode\">\r\n        <Tabs\r\n          onChange={this.changeMethod}\r\n        >\r\n          <Tab\r\n            value={0}\r\n            icon={<FontIcon className=\"material-icons\">view_day</FontIcon>}\r\n            label=\"KMP\"\r\n          >\r\n            <PatternInput onAdd={this.addItem} />\r\n            <PatternList onDelete={this.deleteItem} text={this.state.filteredText} />\r\n          </Tab>\r\n          <Tab\r\n            value={1}\r\n            icon={<FontIcon className=\"material-icons\">local_drink</FontIcon>}\r\n            label=\"BM\"\r\n          >\r\n            <PatternInput onAdd={this.addItem} />\r\n            <PatternList onDelete={this.deleteItem} text={this.state.filteredText} />\r\n          </Tab>\r\n          <Tab\r\n            value={2}\r\n            icon={<FontIcon className=\"material-icons\">code</FontIcon>}\r\n            label=\"REGEX\"\r\n          >\r\n            <PatternInput onAdd={this.addItem} />\r\n            <PatternList onDelete={this.deleteItem} text={this.state.filteredText} />\r\n          </Tab>\r\n        </Tabs>\r\n      </section>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport { List, ListItem } from 'material-ui/List';\r\nimport Subheader from 'material-ui/Subheader';\r\nimport Avatar from 'material-ui/Avatar';\r\nimport FontIcon from 'material-ui/FontIcon';\r\nimport FileFolder from 'material-ui/svg-icons/file/folder';\r\nimport FlipMove from 'react-flip-move';\r\n\r\nconst Result = ({ responseData }) => {\r\n  return (\r\n    <section id=\"result\">\r\n      <List>\r\n        <Subheader inset={true}>\r\n          Search Results\r\n        </Subheader>\r\n        <FlipMove id=\"result__flipmove\" duration={500} easing=\"ease-out\">          \r\n        {\r\n          !responseData[0] ?\r\n          <ListItem \r\n            leftAvatar={\r\n              <Avatar icon={<FontIcon className=\"material-icons\">not_interested</FontIcon>} />\r\n            }\r\n            primaryText=\"Spam Not Detected\"\r\n          /> :\r\n          responseData.map((r, i) => (\r\n              <ListItem\r\n                leftAvatar={<Avatar icon={<FileFolder />} />}\r\n                rightIcon={<FontIcon className=\"material-icons\">link</FontIcon>}\r\n                primaryText={r[0]}\r\n                secondaryText={r[1]}\r\n                key={i}\r\n              />\r\n            )\r\n          )\r\n        }\r\n        </FlipMove>\r\n      </List>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Result","import React from 'react'\r\n\r\nimport Methode from './Methode'\r\nimport Result from './Result'\r\n\r\nimport './index.css'\r\n\r\nconst Content = ({ responseData }) => {\r\n  return (\r\n    <main id=\"content\">\r\n      <section id=\"variable\">\r\n        <Methode />\r\n      </section>\r\n      <section id=\"d1\" />\r\n      <section id=\"value\">\r\n        <Result responseData={responseData} />\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Content","import React from 'react'\r\n\r\nimport \"./index.css\"\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer id=\"footer\">\r\n      <p className=\"footer__claim\">Copyright &copy; 2018 | Nuha Adinata & Ilham Wahabi</p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React, { Component } from 'react';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\n\r\nimport Header from './components/Header'\r\nimport Content from './components/Content'\r\nimport Footer from './components/Footer'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    response: []\r\n  }\r\n\r\n  handleResponse = (data) => {\r\n    this.setState({ response: data })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider>\r\n        <div className=\"App\">\r\n          <Header getResponse={this.handleResponse} />\r\n          <Content responseData={this.state.response} />\r\n          <Footer />\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}